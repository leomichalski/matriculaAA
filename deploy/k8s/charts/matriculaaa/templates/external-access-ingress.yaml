{{- if and .Values.django.enabled .Values.externalAccess.enabled .Values.externalAccess.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: external-access-ingress
  annotations:
    # Adds acme challenge endpoint.
    cert-manager.io/cluster-issuer: {{ .Values.externalAccess.clusterIssuer.name | quote }}
    # Redirects all HTTP links to the matching HTTPS page.
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/ssl-prefer-server-ciphers: "true"
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    # TODO: (MOSTLY DONE) ConfigMap according to deploy/compose/nginx/nginx.conf
    # TODO: (MOSTLY DONE)
    #   add_header Strict-Transport-Security "max-age=20; includeSubDomains; preload" always;
    #   add_header X-Frame-Options DENY;
    #   proxy_set_header X-Real-IP ${DOLLAR}remote_addr;
    #   proxy_set_header X-Forwarded-For ${DOLLAR}proxy_add_x_forwarded_for;
    #   proxy_set_header Host ${DOLLAR}host;
spec:
  ingressClassName: "nginx"
  tls:
  - hosts:
    - {{ required "A valid .Values.endpoint entry required!" .Values.endpoint | quote }}
    - 'www.{{ required "A valid .Values.endpoint entry required!" .Values.endpoint }}'
    secretName: {{ .Values.externalAccess.clusterIssuer.secretName | quote }}  # secret name, same as the privateKeySecretRef in the (Cluster)Issuer
  rules:
    - host: {{ required "A valid .Values.endpoint entry required!" .Values.endpoint | quote }}
      http:
        paths:
        # TODO: only serve the "admin" and the "static" endpoints
        - path: /
          pathType: Prefix
          backend:
            service:
              name: django
              port:
                number: {{ .Values.django.service.port }}
{{- end }}
